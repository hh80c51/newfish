server.port=56081

spring.application.name = shardingjdbc

server.servlet.context-path = /shardingjdbc
spring.http.encoding.enabled = true
spring.http.eccoding.charset = UTF-8
spring.http.encoding.force = true

spring.main.allow-bean-definition-overriding = true

mybatis.configuration.map-underscore-to-camel-case = true

#以下是分片规则配置
#定义数据源
spring.shardingsphere.datasource.names = m1

spring.shardingsphere.datasource.m1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name = com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url = jdbc:mysql://112.126.60.23:3306/db1?useUnicode=true&serverTimezone=UTC
spring.shardingsphere.datasource.m1.username = root
spring.shardingsphere.datasource.m1.password = root

#指定user表的数据分布情况，配置数据节点m1.t_order_1
spring.shardingsphere.sharding.tables.user.actual-data-nodes=m1.user_$->{1..2}

#指定user表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharing.tables.user.key-generator.column=id
spring.shardingsphere.sharing.tables.user.key-generator.type=SNOWFLAKE

#指定user表的分片策略，分片策略包括分片键和分片算法
sping.shardingsphere.sharding.table.user.table-strategy.inline.sharding-column=id
sping.shardingsphere.sharding.table.user.table-strategy.inline.algorithm-expression=user_$->{id % 2}

# 打开sql输出日志
spring.shardingsphere.props.sql.show = true

swagger.enable = true

logging.level.root = info
logging.level.org.springframework.web = info
logging.level.com.fish.shardingjdbc = debug
logging.level.druid.sql = debug
